{
    "openapi": "3.0.0",
    "info": {
        "title": "Car Rental API",
        "description": "This API allows users to search for available cars based on booking dates and filters like car model and comfort category.",
        "version": "1.0.0"
    },
    "paths": {
        "/api/available-cars": {
            "summary": "Get available cars for the user",
            "description": "Fetch the list of cars available for the logged-in user based on the provided date range and optional filters.",
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Get available cars for the user based on the given criteria",
                "description": "Fetch the list of cars available for the logged-in user for a specified time range, with optional filters for model and comfort category.",
                "operationId": "getAvailableCars",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token for accessing protected endpoints. Format: Bearer {token}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Bearer 7|5xhwKbIvbm0ZoVQ6lqwOYoOkSeawniYiVEsVyNSnb79c5ece"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "The start date of the booking (must be in the format YYYY-MM-DD)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "example": "2025-01-03"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "The end date of the booking (must be in the format YYYY-MM-DD)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "example": "2025-01-05"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the list of available cars",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "available_cars": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "model": {
                                                        "type": "string"
                                                    },
                                                    "comfort_category_id": {
                                                        "type": "integer"
                                                    },
                                                    "license_plate": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Validation errors for the query parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "User login",
                "description": "Authenticate a user and return an access token if the credentials are valid.",
                "operationId": "userLogin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "The user's email address.",
                                        "type": "string",
                                        "format": "email",
                                        "example": "frank68@example.net"
                                    },
                                    "password": {
                                        "description": "The user's password.",
                                        "type": "string",
                                        "format": "password",
                                        "example": "1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "user@example.com"
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "employee"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied. User is not an employee."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Task",
            "description": "Task"
        }
    ]
}